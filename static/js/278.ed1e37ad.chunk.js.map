{"version":3,"file":"static/js/278.ed1e37ad.chunk.js","mappings":"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","sources":["components/Buttons/Buttons.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.js","pages/Movies/Movies.jsx","pages/Movies/Movies.styled.js","services/api.js"],"sourcesContent":["import { Button } from \"../../pages/Movies/Movies.styled\"; \nimport propTypes from 'prop-types';\n\nexport const Buttons = ({ page, totalPages, handlePageChange }) => {\n  if (totalPages === 1) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'flex-start',\n        margin: 10,\n        alignItems: 'space-between'\n      }}\n    >\n      <Button\n      style={{\n        marginRight: 10,\n      }}\n        disabled={page === 1}\n        onClick={() => handlePageChange(page - 1)}\n      >&#8249; Previous</Button>\n      <Button\n        disabled={page === totalPages}\n        onClick={() => handlePageChange(page + 1)}\n      >Next &#8250;</Button>\n    </div>\n  );\n};\n\nButtons.propTypes = {\n  page: propTypes.number,\n  totalPages: propTypes.number,\n  handlePageChange: propTypes.func,\n};","import { useEffect, useState, useCallback } from \"react\";\nimport { fetchTrendingMovies } from \"services/api\";\nimport { Container, Card, Img, TextContainer, Link, Text, List, Header } from \"./Home.styled\";\nimport { Buttons } from \"components/Buttons/Buttons\";\nimport NoPoster from 'images/no-image-main.png';\n\nexport const imgUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst Home = ()=>{\n    const [trending, setTrending] = useState([]);\n    const [page, setPage] = useState(1);\n\n  const handlePageChange = useCallback(\n    page => {\n      setPage(page);\n    },\n    [setPage]\n  );\n\n    useEffect(()=>{\n        const fetchTrending = async()=>{\n            try {\n                const {results} =  await fetchTrendingMovies(page);\n                setTrending(results);\n            } catch (error) {\n              console.log({error})\n            }\n        };\n      \n        fetchTrending();\n    }, [page])\n\n    return (\n         <main>\n           <Header>Trending Today</Header>\n           <Container>\n            <List>\n            {trending.map(({title, id, poster_path })=><Card key={id}>\n             <Link to={`movies/${id}`}>\n               <Img src={poster_path ? (imgUrl+poster_path) : (NoPoster)} alt={title} />\n               <TextContainer><Text>{title}</Text></TextContainer>\n               </Link>\n            </Card>)}\n            </List>\n            <Buttons\n               page={page}\n               totalPages={trending.total_pages}\n               handlePageChange={handlePageChange}\n             />\n           </Container>\n         </main>\n    );\n};\n\n\nexport default Home;","import styled from \"styled-components\";\nimport { NavLink} from \"react-router-dom\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    justify-content: center;\n`;\n\nexport const Card = styled.li`\n    background: rgb(255, 255, 255);\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 6px 18px;\n    width: 100%;\n    max-width: 200px;\n    margin: 0.5em;\n    border-radius: 10px;\n    display: inline-block;\n    text-decoration: none;\n    color: black;\n    &:hover {\n    cursor: pointer;\n    transform: scale(1.05);\n    box-shadow: 0 10px 25px rgb(0 0 0 / 8%);\n  }\n`;\n\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    color: black;\n`;\n\n    export const Img = styled.img`\n    padding: 0px;\n    margin: 0px;\n    height: 260px;\n    width: 100%;\n    display: block;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n`;\n\n    export const TextContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    padding: 10px;\n    margin: 0px;\n    text-decoration: none;\n`;\n\nexport const Text = styled.p`\n    font-size: 10px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 100%;\n    justify-content: center;\n`;\n\nexport const Header = styled.h1`\n    color: orangered;\n    margin: 1rem 0px;\n    display: block;\n`;\n\n\n\n","import { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { searchMovies } from \"services/api\";\nimport { Container, Card, Img, TextContainer, Link, Text } from \"../Home/Home.styled\";\nimport { Wrapper,Input,Button, Header } from \"./Movies.styled\";\nimport NoPoster from 'images/no-image-main.png';\nimport {imgUrl} from '../Home/Home';\n\nconst Movies = ()=>{\n    const location = useLocation();\n    const [movies, setMovies] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? \"\";\n\n    useEffect(()=>{\n        if(query===\"\"){\n            return\n        };\n        \n        const fetchMovies = async()=>{\n            try {\n                const movies =  await searchMovies(query);\n                setMovies(movies.results);\n            } catch (error) {\n              console.log({error})\n            }\n        };\n        fetchMovies();\n    }, [query]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        setSearchParams({ query: form.elements.input.value });\n        form.reset();\n    };\n\n    return <main>\n            <Wrapper onSubmit={handleSubmit}>\n                <Header>Let's search movies</Header>\n                <Input type=\"text\" name=\"input\"/>\n                <Button type=\"submit\" name='button'>Search</Button>\n            </Wrapper>\n\n            <Container>\n                {movies && movies.map(movie=><Card key={movie.id}>\n                <Link to={`${movie.id}`} state={{from:location}}>\n                <Img src={movie.poster_path ? (imgUrl+movie.poster_path) : NoPoster} alt={movie.original_title} />\n                  <TextContainer><Text>{movie.original_title}</Text></TextContainer>\n                    </Link>\n                </Card>)}\n            </Container>\n        </main>\n};\n\nexport default Movies;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.form`\n  margin-bottom: 16px;\n`;\n\nexport const Header = styled.h1`\n    color: orangered;\n    margin: 1rem 0px;\n    display: block;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 10px;\n  border: orangered 1px solid;\n  font: inherit;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 8px;\n  border: none;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  cursor: pointer;\n  background-color: black;\n\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n\n  &:disabled {\n    /* color: gray; */\n    background-color: gray;\n    cursor: not-allowed;\n  }\n`;\n","import axios from \"axios\";\n\nconst API_KEY ='643a37e49ba2c6b6360de762fa5f81f9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n export const fetchTrendingMovies = async(page)=> {\n    try {\n      const queryStr = `trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n      const {data: movies} = await axios.get(queryStr);\n      return movies;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  export const searchMovies = async(query)=> {\n    try {\n      const queryStr = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n      const {data: movies} = await axios.get(queryStr);\n      return movies;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  export const getMovieDetails = async(movieId)=> {\n    try {\n      const queryStr = `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n      const {data} = await axios.get(queryStr);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  export const getMovieCredits = async(movieId)=> {\n    try {\n      const queryStr = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n      const {data} = await axios.get(queryStr);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  export const getMovieReview = async(movieId)=> {\n    try {\n      const queryStr = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n      const {data} = await axios.get(queryStr);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n \n"],"names":["Buttons","page","totalPages","handlePageChange","style","display","justifyContent","margin","alignItems","marginRight","disabled","onClick","imgUrl","useState","trending","setTrending","setPage","useCallback","useEffect","fetchTrending","fetchTrendingMovies","results","console","log","error","map","title","id","poster_path","to","src","NoPoster","alt","total_pages","Container","styled","Card","Link","NavLink","Img","TextContainer","Text","List","Header","location","useLocation","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","fetchMovies","searchMovies","onSubmit","e","preventDefault","form","currentTarget","elements","input","value","reset","type","name","movie","state","from","original_title","Wrapper","Input","Button","API_KEY","axios","queryStr","data","Error","getMovieDetails","movieId","getMovieCredits","getMovieReview"],"sourceRoot":""}