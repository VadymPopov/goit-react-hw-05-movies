{"version":3,"file":"static/js/693.c327866a.chunk.js","mappings":"sRAEaA,EAAOC,EAAAA,GAAAA,GAAH,wJASJC,EAAQD,EAAAA,GAAAA,EAAH,0IAQLE,EAAOF,EAAAA,GAAAA,EAAH,+F,SCkBjB,EAhCgB,WACZ,OAA4BG,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GADWC,EAAAA,EAAAA,MACQC,MAAMC,GAmB/B,OAjBAC,EAAAA,EAAAA,YAAU,WACN,GAAIJ,EAAJ,CAIA,IAAMK,EAAY,mCAAG,8GAEUC,EAAAA,EAAAA,IAAeN,GAFzB,OAEPO,EAFO,OAGbR,EAAWQ,EAASC,SAHP,gDAKbC,QAAQC,IAAR,MALa,yDAAH,qDASlBL,GAXC,CAYJ,GAAC,CAACL,KAGC,wBACKF,GAAWA,EAAQa,OAAS,EAAKb,EAAQc,KAAI,gBAAEC,EAAF,EAAEA,OAAOC,EAAT,EAASA,QAAT,OAAoB,UAACrB,EAAD,YAC9D,UAACE,EAAD,sBAAgBkB,MAChB,SAACjB,EAAD,UAAOkB,MAFkED,EAA/B,KAGnC,sEAGtB,C,mMCjCKE,EAAS,mCAEfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEjB,IAAMC,EAAmB,mCAAG,WAAMC,GAAN,2FAExBC,EAFwB,qCAEiBJ,EAFjB,gCAEgDG,GAFhD,SAGDF,EAAAA,EAAAA,IAAUG,GAHT,uBAGjBC,EAHiB,EAGvBC,KAHuB,kBAIvBD,GAJuB,sCAMxB,IAAIE,MAAJ,MANwB,yDAAH,sDAUlBC,EAAY,mCAAG,WAAMC,GAAN,2FAElBL,EAFkB,+BAEiBJ,EAFjB,iCAEiDS,GAFjD,SAGKR,EAAAA,EAAAA,IAAUG,GAHf,uBAGXC,EAHW,EAGjBC,KAHiB,kBAIjBD,GAJiB,sCAMlB,IAAIE,MAAJ,MANkB,yDAAH,sDAUZG,EAAe,mCAAG,WAAMzB,GAAN,2FAErBmB,EAFqB,gBAEDnB,EAFC,oBAEkBe,EAFlB,4BAGNC,EAAAA,EAAAA,IAAUG,GAHJ,uBAGpBE,EAHoB,EAGpBA,KAHoB,kBAIpBA,GAJoB,sCAMrB,IAAIC,MAAJ,MANqB,yDAAH,sDAUfI,EAAe,mCAAG,WAAM1B,GAAN,2FAErBmB,EAFqB,gBAEDnB,EAFC,4BAE0Be,EAF1B,4BAGNC,EAAAA,EAAAA,IAAUG,GAHJ,uBAGpBE,EAHoB,EAGpBA,KAHoB,kBAIpBA,GAJoB,sCAMrB,IAAIC,MAAJ,MANqB,yDAAH,sDAUfhB,EAAc,mCAAG,WAAMN,GAAN,2FAEpBmB,EAFoB,gBAEAnB,EAFA,4BAE2Be,EAF3B,4BAGLC,EAAAA,EAAAA,IAAUG,GAHL,uBAGnBE,EAHmB,EAGnBA,KAHmB,kBAInBA,GAJmB,sCAMpB,IAAIC,MAAJ,MANoB,yDAAH,qD","sources":["pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Item = styled.li`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n    margin-bottom: 15px;\n    padding: 5px;\n`;\n\nexport const Title = styled.p`\n    font-size: 1.4rem;\n    font-weight: 700;\n    text-align: left;\n    width: 100%;\n    white-space: nowrap;\n`;\n\nexport const Text = styled.p`\n    font-size: 1rem;\n    font-weight: 400;\n    text-align: justify;\n`;\n\n    ","import { getMovieReview } from \"services/api\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Item, Text, Title } from \"./Reviews.styled\";\n\nconst Reviews = ()=>{\n    const [reviews, setReviews]=useState(null);\n    const location = useLocation();\n    const movieId = location.state.id;\n\n    useEffect(()=>{\n        if(!movieId){\n            return\n        };\n\n        const fetchReviews = async()=>{\n            try {\n                const response = await getMovieReview(movieId);\n                setReviews(response.results)\n            } catch (error) {\n                console.log(error)\n            }\n        };\n\n        fetchReviews();\n    },[movieId]);\n\n    return(\n        <ul>\n            {reviews && reviews.length > 0 ? (reviews.map(({author,content})=><Item key={author}>\n                <Title>Author: {author}</Title>\n                <Text>{content}</Text>\n            </Item>)):(<p>We don't have any reviews for this movie.</p>)}\n        </ul>\n    );\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY ='643a37e49ba2c6b6360de762fa5f81f9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n export const fetchTrendingMovies = async(page)=> {\n    try {\n      const queryStr = `trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n      const {data: movies} = await axios.get(queryStr);\n      return movies;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  export const searchMovies = async(query)=> {\n    try {\n      const queryStr = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n      const {data: movies} = await axios.get(queryStr);\n      return movies;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  export const getMovieDetails = async(movieId)=> {\n    try {\n      const queryStr = `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n      const {data} = await axios.get(queryStr);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  export const getMovieCredits = async(movieId)=> {\n    try {\n      const queryStr = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n      const {data} = await axios.get(queryStr);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  export const getMovieReview = async(movieId)=> {\n    try {\n      const queryStr = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n      const {data} = await axios.get(queryStr);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n \n"],"names":["Item","styled","Title","Text","useState","reviews","setReviews","movieId","useLocation","state","id","useEffect","fetchReviews","getMovieReview","response","results","console","log","length","map","author","content","API_KEY","axios","fetchTrendingMovies","page","queryStr","movies","data","Error","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}